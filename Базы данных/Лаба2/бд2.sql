--#1.Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ОЦЕНКИ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ОЦЕНКИ.ПРИМЕЧАНИЕ, Н_ВЕДОМОСТИ.ЧЛВК_ИД.
-- Фильтры (AND): 
-- a) Н_ОЦЕНКИ.КОД = зачет.
-- b) Н_ВЕДОМОСТИ.ЧЛВК_ИД = 163249.
-- c) Н_ВЕДОМОСТИ.ЧЛВК_ИД < 142390.
-- Вид соединения: RIGHT JOIN.
Select Н_ОЦЕНКИ.ПРИМЕЧАНИЕ,Н_ВЕДОМОСТИ.ЧЛВК_ИД 
FROM Н_ОЦЕНКИ 
RIGHT JOIN Н_ВЕДОМОСТИ ON Н_ОЦЕНКИ.КОД = Н_ВЕДОМОСТИ.ОЦЕНКА
WHERE Н_ОЦЕНКИ.КОД = 'зачет' AND Н_ВЕДОМОСТИ.ЧЛВК_ИД = 163249 AND Н_ВЕДОМОСТИ.ЧЛВК_ИД < 142390;
-- Здесь ничего не выводит потому что, Н_ВЕДОМОСТИ.ЧЛВК_ИД не может быть равно 163249 и меньше 142390 одновременно.


--#2.Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ИМЯ < Николай.
-- b) Н_ОБУЧЕНИЯ.НЗК > 001000.
-- Вид соединения: LEFT JOIN.
Select Н_ЛЮДИ.ФАМИЛИЯ,Н_ОБУЧЕНИЯ.НЗК,Н_УЧЕНИКИ.ГРУППА 
FROM Н_ЛЮДИ 
LEFT JOIN Н_ОБУЧЕНИЯ ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД 
LEFT JOIN Н_УЧЕНИКИ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ИМЯ < 'Николай' AND Н_ОБУЧЕНИЯ.НЗК > '001000';

--#3.Составить запрос, который ответит на вопрос, есть ли среди студентов группы 3102 те, кто младше 20 лет.
SELECT COUNT(*) > 0 AS "Есть ли студенты младше 20 лет?"
FROM Н_УЧЕНИКИ 
JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '3102' AND DATE_PART('year', AGE(NOW(), Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) < 20;

--#4.В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) менее 2 групп 
-- на заочной форме обучения.Для реализации использовать подзапрос.
SELECT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД 
FROM Н_ГРУППЫ_ПЛАНОВ
WHERE Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД IN (
    SELECT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД 
    FROM Н_ГРУППЫ_ПЛАНОВ 
    JOIN Н_ПЛАНЫ ON Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД = Н_ПЛАНЫ.ПЛАН_ИД 
    JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД 
    WHERE Н_ФОРМЫ_ОБУЧЕНИЯ.ИМЯ_В_ДАТ_ПАДЕЖЕ = 'заочной' 
    GROUP BY Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД 
    HAVING COUNT(Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД) < 2
);

--#5.Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка 
-- не меньше минимальной оценк(е|и) в группе 1100.
SELECT Н_ЛЮДИ.ИД, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО, AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS NUMERIC)) AS Ср_оценка
FROM Н_ЛЮДИ 
JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД 
JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_ВЕДОМОСТИ.ОЦЕНКА ~ '^[2-5]' AND Н_УЧЕНИКИ.ГРУППА = '4100' 
GROUP BY Н_ЛЮДИ.ИД, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО
HAVING AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS NUMERIC)) >= (
    SELECT MIN(Н_ОЦЕНКИ.Ср_оценка)
    FROM (
        SELECT AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS NUMERIC)) AS Ср_оценка
        FROM Н_ВЕДОМОСТИ 
        JOIN Н_УЧЕНИКИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
        WHERE Н_ВЕДОМОСТИ.ОЦЕНКА ~ '^[2-5]' AND Н_УЧЕНИКИ.ГРУППА = '1100'
        GROUP BY Н_ВЕДОМОСТИ.ЧЛВК_ИД
    ) AS "Н_ОЦЕНКИ"
);


--#6.Получить список студентов, отчисленных до первого сентября 2012 года с очной или заочной формы обучения 
-- (специальность: Программная инженерия). В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер пункта приказа;
-- Для реализации использовать соединение таблиц.
SELECT Н_УЧЕНИКИ.ГРУППА, Н_УЧЕНИКИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, Н_УЧЕНИКИ.П_ПРКОК_ИД
FROM Н_ЛЮДИ
JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД 
JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ ON Н_ПЛАНЫ.НАПС_ИД  = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД 
JOIN Н_НАПР_СПЕЦ ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = Н_НАПР_СПЕЦ.ИД 
WHERE Н_УЧЕНИКИ.ПРИЗНАК = 'отчисл' AND Н_УЧЕНИКИ.КОНЕЦ < date_trunc('day', timestamp '2012-01-09 00:00:00') 
AND (Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная' OR Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Заочная') 
AND Н_НАПР_СПЕЦ.НАИМЕНОВАНИЕ = 'Программная инженерия';
-- Здесь ничего не выводит потому что на программной инженери никто не отчислен.
-- SELECT Н_УЧЕНИКИ.ПРИЗНАК
-- FROM Н_УЧЕНИКИ
--   JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
--   JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ ON Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
--   JOIN Н_НАПР_СПЕЦ ON Н_НАПР_СПЕЦ.ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД
--   WHERE Н_НАПР_СПЕЦ.НАИМЕНОВАНИЕ = 'Программная инженерия'
--   GROUP BY Н_УЧЕНИКИ.ПРИЗНАК;




--#7.Сформировать запрос для получения числа на ФКТИУ троечников.
SELECT COUNT(*) AS "Количество троечников в КТиУ"
FROM (
    SELECT Н_УЧЕНИКИ.ЧЛВК_ИД
    FROM Н_ВЕДОМОСТИ
    JOIN Н_УЧЕНИКИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
    JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
    JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
    WHERE Н_ВЕДОМОСТИ.ОЦЕНКА~ '3' AND Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
    GROUP BY Н_УЧЕНИКИ.ЧЛВК_ИД) AS "Троечники";















--#4.В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) менее 2 групп на заочной форме обучения.
-- Для реализации использовать подзапрос.
SELECT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД 
FROM Н_ГРУППЫ_ПЛАНОВ
JOIN Н_ПЛАНЫ ON Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД = Н_ПЛАНЫ.ПЛАН_ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE Н_ФОРМЫ_ОБУЧЕНИЯ.ИМЯ_В_ДАТ_ПАДЕЖЕ = 'очной'
GROUP BY Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД 
HAVING COUNT(Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД) < 2;











SELECT DISTINCT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
FROM Н_ПЛАНЫ
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ on Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
JOIN Н_ГРУППЫ_ПЛАНОВ on Н_ПЛАНЫ.ПЛАН_ИД = Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
Where Н_ФОРМЫ_ОБУЧЕНИЯ.ИМЯ_В_ДАТ_ПАДЕЖЕ = 'заочной' 
AND Н_ГРУППЫ_ПЛАНОВ.ГРУППА IN (
SELECT Н_ГРУППЫ_ПЛАНОВ.ГРУППА FROM Н_ГРУППЫ_ПЛАНОВ
JOIN Н_ПЛАНЫ ON Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД=Н_ПЛАНЫ.ПЛАН_ИД
GROUP BY Н_ГРУППЫ_ПЛАНОВ.ГРУППА
HAVING count(Н_ГРУППЫ_ПЛАНОВ.ГРУППА)<2);







